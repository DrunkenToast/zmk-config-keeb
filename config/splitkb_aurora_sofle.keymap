/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// Editor used: https://nickcoutsos.github.io/keymap-editor/

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC        &kp N1  &kp N2     &kp N3    &kp N4  &kp N5                               &kp N6    &kp N7  &kp N8     &kp N9    &kp N0      &kp DEL
&kp TAB        &kp Q   &kp W      &kp E     &kp R   &kp T                                &kp Y     &kp U   &kp I      &kp O     &kp P       &kp BSLH
&mt LCTRL ESC  &kp A   &kp S      &kp D     &kp F   &kp G                                &kp H     &kp J   &kp K      &kp L     &lt 1 SEMI  &kp SQT
&kp LSHFT      &kp Z   &kp X      &kp C     &kp V   &kp B      &kp K_MUTE    &kp K_MUTE  &kp N     &kp M   &kp COMMA  &kp DOT   &kp FSLH    &kp RSHFT
                       &kp LCTRL  &kp LALT  &mo 2   &kp SPACE  &kp LMETA     &kp RET     &kp BSPC  &mo 2   &kp RGUI   &kp RALT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        util_layer {
            bindings = <
&bt BT_CLR         &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                            &trans          &trans           &trans             &trans              &trans  &trans
&ext_power EP_TOG  &msc SCRL_DOWN    &mmv MOVE_UP       &msc SCRL_UP       &trans        &trans                                  &trans          &kp C_REWIND     &kp C_PLAY_PAUSE   &kp C_FAST_FORWARD  &trans  &trans
&trans             &mmv MOVE_LEFT    &mmv MOVE_DOWN     &mmv MOVE_RIGHT    &trans        &trans                                  &kp LEFT_ARROW  &kp DOWN_ARROW   &kp UP_ARROW       &kp RIGHT_ARROW     &trans  &trans
&trans             &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &trans        &kp K_MUTE    &kp K_MUTE  &trans          &kp C_MUTE       &trans             &trans              &trans  &trans
                                     &trans             &trans             &trans        &trans        &trans        &trans      &trans          &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        symbol_raise_layer {
            bindings = <
&kp PRINTSCREEN  &kp F1           &kp F2       &kp F3    &kp F4      &kp F5                                      &kp F6  &kp F7            &kp F8             &kp F9                &kp F10                &kp F11
&trans           &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                                 &none   &kp MINUS         &kp EQUAL          &none                 &none                  &kp F12
&trans           &kp CARET        &kp AMPS     &kp STAR  &kp PIPE    &kp RA(N5)                                  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE
&trans           &trans           &trans       &trans    &trans      &kp RA(NUMBER_3)  &kp K_MUTE    &kp K_MUTE  &trans  &trans            &trans             &trans                &trans                 &trans
                                  &trans       &trans    &trans      &trans            &trans        &trans      &trans  &trans            &trans             &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
